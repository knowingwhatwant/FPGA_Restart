// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Standard Edition"

// DATE "08/16/2025 17:40:36"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module simple_top (
	clk,
	rst_n,
	led_out);
input 	clk;
input 	rst_n;
output 	[3:0] led_out;

// Design Ports Information
// led_out[0]	=>  Location: PIN_U3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// led_out[1]	=>  Location: PIN_U4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// led_out[2]	=>  Location: PIN_R3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// led_out[3]	=>  Location: PIN_R6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// rst_n	=>  Location: PIN_Y2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("ModesimTest_v.sdo");
// synopsys translate_on

wire \led_out[0]~output_o ;
wire \led_out[1]~output_o ;
wire \led_out[2]~output_o ;
wire \led_out[3]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \u_counter|count_reg[0]~3_combout ;
wire \rst_n~input_o ;
wire \rst_n~inputclkctrl_outclk ;
wire \u_counter|count_reg[1]~0_combout ;
wire \u_counter|count_reg[2]~1_combout ;
wire \u_counter|count_reg[3]~2_combout ;
wire [3:0] \u_counter|count_reg ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y34_N9
cycloneive_io_obuf \led_out[0]~output (
	.i(\u_counter|count_reg [0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \led_out[0]~output .bus_hold = "false";
defparam \led_out[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y34_N16
cycloneive_io_obuf \led_out[1]~output (
	.i(\u_counter|count_reg [1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \led_out[1]~output .bus_hold = "false";
defparam \led_out[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y34_N23
cycloneive_io_obuf \led_out[2]~output (
	.i(\u_counter|count_reg [2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \led_out[2]~output .bus_hold = "false";
defparam \led_out[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y34_N2
cycloneive_io_obuf \led_out[3]~output (
	.i(\u_counter|count_reg [3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \led_out[3]~output .bus_hold = "false";
defparam \led_out[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N12
cycloneive_lcell_comb \u_counter|count_reg[0]~3 (
// Equation(s):
// \u_counter|count_reg[0]~3_combout  = !\u_counter|count_reg [0]

	.dataa(gnd),
	.datab(gnd),
	.datac(\u_counter|count_reg [0]),
	.datad(gnd),
	.cin(gnd),
	.combout(\u_counter|count_reg[0]~3_combout ),
	.cout());
// synopsys translate_off
defparam \u_counter|count_reg[0]~3 .lut_mask = 16'h0F0F;
defparam \u_counter|count_reg[0]~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N15
cycloneive_io_ibuf \rst_n~input (
	.i(rst_n),
	.ibar(gnd),
	.o(\rst_n~input_o ));
// synopsys translate_off
defparam \rst_n~input .bus_hold = "false";
defparam \rst_n~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \rst_n~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\rst_n~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\rst_n~inputclkctrl_outclk ));
// synopsys translate_off
defparam \rst_n~inputclkctrl .clock_type = "global clock";
defparam \rst_n~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y34_N13
dffeas \u_counter|count_reg[0] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\u_counter|count_reg[0]~3_combout ),
	.asdata(vcc),
	.clrn(\rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\u_counter|count_reg [0]),
	.prn(vcc));
// synopsys translate_off
defparam \u_counter|count_reg[0] .is_wysiwyg = "true";
defparam \u_counter|count_reg[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N6
cycloneive_lcell_comb \u_counter|count_reg[1]~0 (
// Equation(s):
// \u_counter|count_reg[1]~0_combout  = \u_counter|count_reg [1] $ (\u_counter|count_reg [0])

	.dataa(gnd),
	.datab(gnd),
	.datac(\u_counter|count_reg [1]),
	.datad(\u_counter|count_reg [0]),
	.cin(gnd),
	.combout(\u_counter|count_reg[1]~0_combout ),
	.cout());
// synopsys translate_off
defparam \u_counter|count_reg[1]~0 .lut_mask = 16'h0FF0;
defparam \u_counter|count_reg[1]~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y34_N7
dffeas \u_counter|count_reg[1] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\u_counter|count_reg[1]~0_combout ),
	.asdata(vcc),
	.clrn(\rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\u_counter|count_reg [1]),
	.prn(vcc));
// synopsys translate_off
defparam \u_counter|count_reg[1] .is_wysiwyg = "true";
defparam \u_counter|count_reg[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N28
cycloneive_lcell_comb \u_counter|count_reg[2]~1 (
// Equation(s):
// \u_counter|count_reg[2]~1_combout  = \u_counter|count_reg [2] $ (((\u_counter|count_reg [1] & \u_counter|count_reg [0])))

	.dataa(\u_counter|count_reg [1]),
	.datab(gnd),
	.datac(\u_counter|count_reg [2]),
	.datad(\u_counter|count_reg [0]),
	.cin(gnd),
	.combout(\u_counter|count_reg[2]~1_combout ),
	.cout());
// synopsys translate_off
defparam \u_counter|count_reg[2]~1 .lut_mask = 16'h5AF0;
defparam \u_counter|count_reg[2]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y34_N29
dffeas \u_counter|count_reg[2] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\u_counter|count_reg[2]~1_combout ),
	.asdata(vcc),
	.clrn(\rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\u_counter|count_reg [2]),
	.prn(vcc));
// synopsys translate_off
defparam \u_counter|count_reg[2] .is_wysiwyg = "true";
defparam \u_counter|count_reg[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N26
cycloneive_lcell_comb \u_counter|count_reg[3]~2 (
// Equation(s):
// \u_counter|count_reg[3]~2_combout  = \u_counter|count_reg [3] $ (((\u_counter|count_reg [0] & (\u_counter|count_reg [2] & \u_counter|count_reg [1]))))

	.dataa(\u_counter|count_reg [0]),
	.datab(\u_counter|count_reg [2]),
	.datac(\u_counter|count_reg [3]),
	.datad(\u_counter|count_reg [1]),
	.cin(gnd),
	.combout(\u_counter|count_reg[3]~2_combout ),
	.cout());
// synopsys translate_off
defparam \u_counter|count_reg[3]~2 .lut_mask = 16'h78F0;
defparam \u_counter|count_reg[3]~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y34_N27
dffeas \u_counter|count_reg[3] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\u_counter|count_reg[3]~2_combout ),
	.asdata(vcc),
	.clrn(\rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\u_counter|count_reg [3]),
	.prn(vcc));
// synopsys translate_off
defparam \u_counter|count_reg[3] .is_wysiwyg = "true";
defparam \u_counter|count_reg[3] .power_up = "low";
// synopsys translate_on

assign led_out[0] = \led_out[0]~output_o ;

assign led_out[1] = \led_out[1]~output_o ;

assign led_out[2] = \led_out[2]~output_o ;

assign led_out[3] = \led_out[3]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
