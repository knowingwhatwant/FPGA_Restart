|UartSend
clk => clk.IN1
rst_n => rst_n.IN1
uart_tx << uart_tx_byte:uart_tx_byte_inst2.uart_tx


|UartSend|uart_tx_byte:uart_tx_byte_inst2
clk => uart_tx_done~reg0.CLK
clk => uart_tx~reg0.CLK
clk => r_data_byte[0].CLK
clk => r_data_byte[1].CLK
clk => r_data_byte[2].CLK
clk => r_data_byte[3].CLK
clk => r_data_byte[4].CLK
clk => r_data_byte[5].CLK
clk => r_data_byte[6].CLK
clk => r_data_byte[7].CLK
clk => send_en.CLK
clk => bps_cnt[0].CLK
clk => bps_cnt[1].CLK
clk => bps_cnt[2].CLK
clk => bps_cnt[3].CLK
clk => clk_div[0].CLK
clk => clk_div[1].CLK
clk => clk_div[2].CLK
clk => clk_div[3].CLK
clk => clk_div[4].CLK
clk => clk_div[5].CLK
clk => clk_div[6].CLK
clk => clk_div[7].CLK
clk => clk_div[8].CLK
clk => clk_div[9].CLK
clk => clk_div[10].CLK
clk => clk_div[11].CLK
clk => clk_div[12].CLK
clk => clk_div[13].CLK
clk => clk_div[14].CLK
clk => clk_div[15].CLK
clk => clk_div[16].CLK
clk => clk_div[17].CLK
clk => clk_div[18].CLK
clk => clk_div[19].CLK
clk => clk_div[20].CLK
rst_n => send_en.OUTPUTSELECT
rst_n => clk_div[0].ACLR
rst_n => clk_div[1].ACLR
rst_n => clk_div[2].ACLR
rst_n => clk_div[3].ACLR
rst_n => clk_div[4].ACLR
rst_n => clk_div[5].ACLR
rst_n => clk_div[6].ACLR
rst_n => clk_div[7].ACLR
rst_n => clk_div[8].ACLR
rst_n => clk_div[9].ACLR
rst_n => clk_div[10].ACLR
rst_n => clk_div[11].ACLR
rst_n => clk_div[12].ACLR
rst_n => clk_div[13].ACLR
rst_n => clk_div[14].ACLR
rst_n => clk_div[15].ACLR
rst_n => clk_div[16].ACLR
rst_n => clk_div[17].ACLR
rst_n => clk_div[18].ACLR
rst_n => clk_div[19].ACLR
rst_n => clk_div[20].ACLR
rst_n => uart_tx~reg0.PRESET
rst_n => uart_tx_done~reg0.ACLR
rst_n => bps_cnt[0].ACLR
rst_n => bps_cnt[1].ACLR
rst_n => bps_cnt[2].ACLR
rst_n => bps_cnt[3].ACLR
byte_in[0] => r_data_byte[0].DATAIN
byte_in[1] => r_data_byte[1].DATAIN
byte_in[2] => r_data_byte[2].DATAIN
byte_in[3] => r_data_byte[3].DATAIN
byte_in[4] => r_data_byte[4].DATAIN
byte_in[5] => r_data_byte[5].DATAIN
byte_in[6] => r_data_byte[6].DATAIN
byte_in[7] => r_data_byte[7].DATAIN
baud_set[0] => Decoder0.IN2
baud_set[0] => Decoder2.IN1
baud_set[1] => Decoder0.IN1
baud_set[1] => Decoder1.IN1
baud_set[2] => Decoder0.IN0
baud_set[2] => Decoder1.IN0
baud_set[2] => Decoder2.IN0
send_go => send_en.OUTPUTSELECT
send_go => r_data_byte[7].ENA
send_go => r_data_byte[6].ENA
send_go => r_data_byte[5].ENA
send_go => r_data_byte[4].ENA
send_go => r_data_byte[3].ENA
send_go => r_data_byte[2].ENA
send_go => r_data_byte[1].ENA
send_go => r_data_byte[0].ENA
uart_tx <= uart_tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_done <= uart_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


